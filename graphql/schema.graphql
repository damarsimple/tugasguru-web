#import types.graphql
#import student/*.graphql
#import teacher/*.graphql
#import user/*.graphql

type Query {
    attachments(
        where: _ @whereConditions(columns: ["id", "status"])
    ): [Attachment!]! @can(ability: "viewAny") @paginate(type: CONNECTION)
    forms: [Form!]! @can(ability: "viewAny") @paginate(type: CONNECTION)
    schoolforms: [Form!]!
        @paginate(type: CONNECTION, builder: "App\\Models\\Form@ppdbforms")
    form(id: ID! @eq): Form! @find @can(ability: "view", find: "id")
    provinces: [Province!]! @all

    cities: [City!]! @all
    districts(city_id: ID @where(operator: "=")): [District!]! @all
    provincesAdmin: [Province!]! @paginate(type: CONNECTION)
    citiesAdmin: [City!]! @paginate(type: CONNECTION)
    districtsAdmin: [District!]! @paginate(type: CONNECTION)
    me: User @auth
    users(
        district_id: ID @where(operator: "=")
        city_id: ID @where(operator: "=")
        roles: Roles @where(operator: "=")
        is_bimbel: Boolean @where(operator: "=")
    ): User @paginate(type: CONNECTION)
    user(id: ID! @eq): User @find
    school(id: ID! @eq): School @find

    schools(
        where: _
            @whereConditions(
                columns: ["province_id", "district_id", "city_id", "city_id"]
            )
    ): School @paginate(type: CONNECTION)

    report(id: ID! @eq): Report @find
    consultation(id: ID! @eq): Consultation
        @find
        @can(ability: "view", find: "id")
    attendance(id: ID! @eq): Attendance @find
    assigment(id: ID! @eq): Assigment @find
    transaction(id: ID! @eq): Transaction
        @find
        @can(ability: "view", find: "id")
    transactions: Transaction
        @paginate(type: CONNECTION)
        @can(ability: "viewAny")
    accesses: [Access!]! @all
    examtypes: [Examtype!]! @all
    subjects: [Subject!]! @all
    classtypes: [Classtype!]! @all
    schooltypes: [Schooltype!]! @all
    article(slug: String! @eq): Article @find
    quizzes(
        where: _ @whereConditions(columns: ["subject_id", "classtype_id"])
    ): [Quiz]!
        @paginate(type: CONNECTION)
        @orderBy(column: "created_at", direction: DESC)
    questions(
        subject_id: ID @where(operator: "=")
        classtype_id: ID @where(operator: "=")
        where: _ @whereConditions(columns: ["subject_id", "classtype_id"])
    ): [Question]!
        @paginate(type: CONNECTION)
        @orderBy(column: "created_at", direction: DESC)
    packagequestions(
        subject_id: ID @where(operator: "=")
        classtype_id: ID @where(operator: "=")
        where: _ @whereConditions(columns: ["subject_id", "classtype_id"])
    ): [Packagequestion]!
        @paginate(type: CONNECTION)
        @orderBy(column: "created_at", direction: DESC)
    subjectsAdmin: [Subject!]! @paginate(type: CONNECTION)
}
